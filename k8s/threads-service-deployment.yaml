---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: threads-service
  name: threads-service
  namespace: ersms-forum
spec:
  replicas: 2
  selector:
    matchLabels:
      app: threads-service
  strategy: {}
  template:
    metadata:
      labels:
        app: threads-service
    spec:
      containers:
        - image: ghcr.io/ersms-24l/ersms-24l/threads:latest
          name: threads-service
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              port: 8083
              path: /threads/actuator/health/liveness
              scheme: HTTPS
            initialDelaySeconds: 240
            periodSeconds: 5
          readinessProbe:
            httpGet:
              port: 8083
              path: /threads/actuator/health/readiness
              scheme: HTTPS
            initialDelaySeconds: 20
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
          resources:
            requests:
              cpu: 125m
              memory: 250Mi
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: kubernetes
            - name: AXON_AXONSERVER_SERVERS
              value: axonserver
            - name: AXONIQ_CONSOLE_CREDENTIALS
              value: "68447ea9-1:4ac1289d784047ac88cc1e1ab39bdefc"
            - name: SPRING_DATA_MONGODB_URI
              value: "mongodb://root:root@mongodb:27017/threads?authSource=admin"
            - name: KC_BASE
              value: http://keycloak:8888
            - name: KC_ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: kc-admin-pass
                  key: KC_ADMINPASSWORD
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
              value: http://keycloak:8888/keycloak/realms/ersms
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI
              value: http://keycloak:8888/keycloak/realms/ersms/protocol/openid-connect/certs
          ports:
            - containerPort: 8083
      restartPolicy: Always
status: {}
